---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: iknowmed-mcp-admin-service-qa
  namespace: iknowmed-g2-mcp-qa
  labels:
    backstage.io/kubernetes-id: iknowmed-g2-mcp-qa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: iknowmed-mcp-admin-service-qa
  template:
    metadata:
      labels:
        app: iknowmed-mcp-admin-service-qa
        backstage.io/kubernetes-id: iknowmed-g2-mcp-qa
        appContact: 'Sivaranjani_A'
        github: 'iknowmed-mcp-admin-service'
        appVersion: '${IMAGE_TAG}'
    spec:
      containers:
        - name: iknowmed-mcp-admin-service-qa
          image: "${DOCKER_REGISTRY}/iknowmed-mcp-admin-service:${IMAGE_TAG}"
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          #env:
          #  - name: JAVA_OPTS
          #    value: "-Xms50M -Xmx1524M"
          ports:
            - containerPort: 8080
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 250m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 400Mi
          envFrom:
              - secretRef:
                  name: iknowmed-mcp-admin-service-qa-secret
          env:
          - name: SPRING_PROFILES_ACTIVE
            value: "cloud"
          - name: APP_VERSION
            value: "${IMAGE_TAG}"
      imagePullSecrets:
        # TODO: Create  Kubernetes Secret with your jFrog credentials (example in SECRETS.md)
        - name: docker-registry-credentials
        
#      initContainers:
#      - name: init-flyway
#        image: "${DOCKER_REGISTRY}/iknowmed-mcp-admin-service-flyway:${IMAGE_TAG}"       
#         command: ["flyway", "-url=${SPRING_DATASOURCE_URL}", "-user=${SPRING_DATASOURCE_USERNAME}", "-password=${SPRING_DATASOURCE_PASSWORD}", "-connectRetries=60", "repair"]
#        command: ["flyway", "-url=${SPRING_DATASOURCE_URL}", "-user=${SPRING_DATASOURCE_USERNAME}", "-password=${SPRING_DATASOURCE_PASSWORD}", "-connectRetries=60", "migrate"]
#      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: iknowmed-mcp-admin-service-qa-svc
  # TODO: Change to your teams namespace
  namespace: iknowmed-g2-mcp-qa
  labels:
    app: iknowmed-g2-mcp-qa
    backstage.io/kubernetes-id: iknowmed-mcp-admin-service-qa
spec:
  ports:
    - protocol: TCP
      port: 8080
  selector:
    app: iknowmed-mcp-admin-service-qa
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: iknowmed-mcp-admin-service-qa-ingress
  # TODO: Change to your teams namespace
  namespace: iknowmed-g2-mcp-qa
  annotations:
    kubernetes.io/ingress.class: nginx-internal
spec:
  tls:
    - hosts:
        # If deployment target is changed, update the cluster domain here, more info in DEPLOY.md
        - mcp-admin-service-qa.dev.aks.west.us.mckesson.com
  rules:
    # If deployment target is changed, update the cluster domain here, more info in DEPLOY.md
  - host: mcp-admin-service-qa.dev.aks.west.us.mckesson.com
    http:
      paths:
      - backend:
          service:
            name: iknowmed-mcp-admin-service-qa-svc
            port:
              number: 8080
        pathType: ImplementationSpecific
        
---
apiVersion: v1
kind: Secret
metadata:
  name: iknowmed-mcp-admin-service-qa-secret
  namespace: iknowmed-g2-mcp-qa
type: Opaque
stringData:
  #APP
  SPRING_DATA_MONGODB_URI: "${SPRING_DATA_MONGODB_URI}"
  SPRING_DATA_MONGODB_DATABASE: "${SPRING_DATA_MONGODB_DATABASE}"
  AUTHORIZATION_SERVICE_URL: "${AUTHORIZATION_SERVICE_URL}"
