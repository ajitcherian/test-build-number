name: Predefined function
on: 
  # workflow_dispatch:
  push:
    branches: main

jobs:
  job1:
    runs-on: ubuntu-latest
    steps:
      # - uses: SpicyPizza/create-envfile@v2.0
      #   with:
      #     envkey_username: ${{ secrets.username }}
      #     envkey_reCaptcha.verification.secret: ${{ secrets.reCaptcha_verification_secret }}
      #     envkey_VAR3: ${{ secrets.OAUTH_USER_NAME }}
      #     # Below are variable for the module
      #     file_name: secrets.properties
      #     fail_on_empty: false
      #     sort_keys: false
      # - name: Create .env file
      #   uses: ozaytsev86/create-env-file@v1
      #   with:
      #     ENV_reCaptcha.verification.secret: ${{ secrets.reCaptcha_verification_secret }}
      #     ENV_ANOTHER_KEY: ${{ secrets.ANOTHER_KEY }}
     # - name: Create .env ðŸ¤«
     #   uses: DeveloperRic/action-create-env@v1.0.2 # set this to the version of your choice
     #   with:
     #    directory: ${{ github.workspace }}
     #    # Set this if you want the action to look in environment variables for extra content. This input is not required.
     #    # Note: setting to false or any other value will still enable environment variable lookup.
     #    # If you don't want this turned on, don't include the input.
     #    include_env_vars: true
     #   env:
     #      # If `include_env_vars` is true, the following environment variables will be written to the .env file as:
     #      # PROD=${{ secrets.PROD }}
     #      # ACTION_CREATE_ENV_JOKE: ${{ secrets.ACTION_CREATE_ENV_JOKE }}
     #      # Note: `full_text` is dumped to the .env file first and subsequently environment variables are dumped.
     #      #       This means that duplicate entries may exist in the .env file.
     #        ACTION_CREATE_ENV_reCaptcha.verification.secret: ${{ secrets.reCaptcha_verification_secret }}
     #        ACTION_CREATE_ENV_username: ${{ secrets.APP_USERNAME }}
     #        ACTION_CREATE_ENV_password: ${{ secrets.APP_PASSWORD }}
     #        ACTION_CREATE_ENV_oauth2.clientId: ${{ secrets.OAUTH2_CLIENT_ID }}
     #        ACTION_CREATE_ENV_oauth2.clientSecret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
     #        ACTION_CREATE_ENV_ui.clientId: ${{ secrets.UI_CLIENT_ID }}
     #        # These credentials are used multiple places
     #        ACTION_CREATE_ENV_oauth2.username: ${{ secrets.OAUTH2_USERNAME }}
     #        ACTION_CREATE_ENV_oauth2.password: ${{ secrets.OAUTH2_PASSWORD }}
     #        # Openid connect application db connection
     #        ACTION_CREATE_ENV_OAUTH_USER_NAME: ${{ secrets.OAUTH_USER_NAME }}
     #        ACTION_CREATE_ENV_OAUTH_PASSWORD: ${{ secrets.OAUTH_PASSWORD }}
     #        # Captcha Configuration
     #        ACTION_CREATE_ENV_reCaptcha.verification.siteKey: ${{ secrets.CAPTCHA_SITE_KEY }}
     # - name: Create Dotenv File
     #   uses: actually-colab/github-action-create-env-file@v2.3
     #   with:
     #      envkey_debug: false
     #      envkey_reCaptcha.verification.secret: ${{ secrets.reCaptcha_verification_secret }}
     #      file_name: .env
     # - name: Create .env file
     #   uses: skiddph/actions-env@v1.0.3
     #   with:
     #    file: .env # default | a path or filename
     #    prefix: 'envkey_' # default | must be uppercase
     # - name: Make Secret File
     #   uses: DeveloperRic/action-create-env@v1.0.2
     #   with:
     #    directory: ${{ github.workspace }}
     #    include_env_vars: true
     #   env:
     #    ACTION_CREATE_ENV_FHIR_OAUTH_LOGIN_USERNAME: "Test value"
     #    ACTION_CREATE_ENV_OAUTH2_CLIENT_ID: "get value"
     #    ACTION_CREATE_ENV_API_PORTAL_OAUTH2_CLIENT_SECRET: ${{ secrets.API_PORTAL_OAUTH2_CLIENT_SECRET }}
     #    ACTION_CREATE_ENV_OKTA_OH_AUTH: ${{ secrets.BLANK }}
     #    ACTION_CREATE_ENV_NON_EMPTY: "not empty=1233"
     #    ACTION_CREATE_ENV_reCaptcha.verification.secret: "values"
     # - name: "Make secret file"
     #   uses: skiddph/actions-env@v1.0.3
     #   with:
     #    file: secrets.properties
     #    prefix: 'envkey_' # default | must be uppercase
     #   env:
     #    envkey_FHIR_OAUTH_LOGIN_USERNAME: "Test value"
     #    envkey_OAUTH2_CLIENT_ID: "get value"
     #    envkey_API_PORTAL_OAUTH2_CLIENT_SECRET: ${{ secrets.API_PORTAL_OAUTH2_CLIENT_SECRET }}
     #    envkey_OKTA_OH_AUTH: ${{ secrets.BLANK }}
     #    envkey_NON_EMPTY: "not empty=1233"
     #    envkey_reCaptcha.verification.secret: "values"
     # - env:
     #     API_PORTAL_OAUTH2_CLIENT_SECRET: ${{ secrets.API_PORTAL_OAUTH2_CLIENT_SECRET }}
     #     APP_USERNAME: ${{ secrets.APP_USERNAME }}
     #     APP_PASSWORD: ${{ secrets.APP_PASSWORD }}
     #     OAUTH2_CLIENT_ID: ${{ secrets.OAUTH2_CLIENT_ID }}
     #     UI_CLIENT_ID: ${{ secrets.UI_CLIENT_ID }}
     #     OAUTH2_USERNAME: ${{ secrets.OAUTH2_USERNAME }}
     #     OAUTH_USER_NAME: ${{ secrets.OAUTH_USER_NAME }}
     #     OAUTH_PASSWORD: ${{ secrets.OAUTH_PASSWORD }}
     #     CAPTCHA_SECRET: ${{ secrets.CAPTCHA_SECRET }}
     #     CAPTCHA_SITE_KEY: ${{ secrets.CAPTCHA_SITE_KEY }}
     #   run: |
     #       # echo "file create from DeveloperRic/action-create-env@v1.0.2"
     #       # cat .env
     #       # echo "###################################################"
     #       # echo "file create from skiddph/actions-env@v1.0.3"
     #       # cat  secrets.properties
     #       # echo "username=`echo ${{ secrets.API_PORTAL_OAUTH2_CLIENT_SECRET }}`" >> secrets.properties          
     #       # Define the array of secrets and their corresponding properties
     #         secrets=(
     #            "APP_USERNAME=username"
     #            "APP_PASSWORD=password"
     #            "OAUTH2_CLIENT_ID=oauth2.clientId"
     #            "OAUTH2_CLIENT_SECRET=oauth2.clientSecret"
     #            "UI_CLIENT_ID=ui.clientId"
     #            "OAUTH2_USERNAME=oauth2.username"
     #            "OAUTH2_PASSWORD=oauth2.password"
     #            "OAUTH_USER_NAME=OAUTH_USER_NAME"
     #            "OAUTH_PASSWORD=OAUTH_PASSWORD"
     #            "CAPTCHA_SECRET=reCaptcha.verification.secret"
     #            "CAPTCHA_SITE_KEY=reCaptcha.verification.siteKey"
     #            "API_PORTAL_OAUTH2_CLIENT_SECRET=test.sec"
     #         )
     #         # Loop through the secrets array
     #         for secret in "${secrets[@]}"; do
     #              # Extract the secret name and property
     #              secret_name="${secret%%=*}"
     #              property="${secret#*=}"
              
     #              # Get the value of the secret from GitHub secrets using indirect expansion
     #              secret_value="${!secret_name}"
              
     #              # Write the property and its value to secrets.properties
     #              echo "${property}=${secret_value}" >> secrets.properties
     #         done
     - env:
            # Add variable name with prefix "ACTION_CREATE_ENV_<VARIABLE-NAME>".
            ACTION_CREATE_ENV_username: ${{ secrets.APP_USERNAME }}
            ACTION_CREATE_ENV_password: ${{ secrets.APP_PASSWORD }}
            ACTION_CREATE_ENV_oauth2.clientId: ${{ secrets.OAUTH2_CLIENT_ID }}
            ACTION_CREATE_ENV_oauth2.clientSecret: ${{ secrets.OAUTH2_CLIENT_SECRET }}
            ACTION_CREATE_ENV_ui.clientId: ${{ secrets.UI_CLIENT_ID }}
            # These credentials are used multiple places
            ACTION_CREATE_ENV_oauth2.username: ${{ secrets.OAUTH2_USERNAME }}
            ACTION_CREATE_ENV_oauth2.password: ${{ secrets.OAUTH2_PASSWORD }}
            # Openid connect application db connection
            ACTION_CREATE_ENV_OAUTH_USER_NAME: ${{ secrets.OAUTH_USER_NAME }}
            ACTION_CREATE_ENV_OAUTH_PASSWORD: ${{ secrets.OAUTH_PASSWORD }}
            # Captcha Configuration
            ACTION_CREATE_ENV_reCaptcha.verification.secret: ${{ secrets.CAPTCHA_SECRET }}
            ACTION_CREATE_ENV_reCaptcha.verification.siteKey: ${{ secrets.CAPTCHA_SITE_KEY }}
       run: |
          # Filter environment variables with prefix ACTION_CREATE_ENV_
          filtered_vars=$(env | grep '^ACTION_CREATE_ENV_')
          
          # Copy filtered variables to a file
          echo "$filtered_vars" > secrets-temp.properties
          
          # Remove prefix ACTION_CREATE_ENV_ from each line in the file
          awk -F= '!/^$/ && $2 != "" { sub(/^ACTION_CREATE_ENV_/, "", $1); print $1 "=" $2 }' secrets-temp.properties  > secrets.properties 

          # sed -i 's/ACTION_CREATE_ENV_//' secrets-temp.properties 
          # # Remove blank secret variables. 
          # awk -F= '$2 !~ /[[:alnum:]]/ {print}'  secrets-temp.properties > secrets.properties
          #   # awk -F'=' '$2!=""' tmp-secrets.properties > secrets.properties

     # - uses: actions/upload-artifact@v4
     #   with:
     #    name: my-artifact
     #    path: .env
     - uses: actions/upload-artifact@v4
       with:
        name: my-artifact2
          # path: secrets.properties, .env
        path: secrets.properties

