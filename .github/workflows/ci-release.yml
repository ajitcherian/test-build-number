name: ci_pipeline

on:
  push:
    branches:
      - '*'
  # workflow_dispatch:
  #   inputs:
  #     enabled_veracode_run:
  #       description: 'Execute Veracode scan in release branch'
  #       type: boolean
  #       required: true
  #       default: false
run-name: This is run name (${{ github.run_number }} + 1000)
jobs:
  set_env:
    name: Setup Global Environments
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      DOCKER_REGISTRY: "mck-ontada-sre.jfrog.io"
      JFROG_REPO_NAME: "ontada-fhir-service"
      GH_TOKEN: ${{ secrets.SECRET }} #${{ github.token }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Increase build
        run: |
            secrets_to_delete=(MASTER_CONTROLLER_IP SLAVE_CONTROLLER_IPS SLAVE_CONTROLLER_NAMES WILDFLY_HOSTNAME WILDFLY_PASSWORD WILDFLY_PORT	WILDFLY_USERNAME)
            list_secret_names=$(gh secret list -e prod | awk '{print $1}')
            for secret_name in "${secrets_to_delete[@]}"; do
              if [[ "$list_secret_names" =~ "$secret_name" ]]; then  # Check if MY_SECRET exists in the list
                echo "Secret exists, deleting..."
                gh secret delete $secret_name -e prod
                if [ $? -eq 0 ]; then
                  echo "Secret deleted successfully."
                else
                  echo "Failed to delete secret."
                fi
              else
                echo "Secret does not exist."
              fi
            done
            echo "delete global"
            secrets_to_delete=(LMDA LYNX_KEY SERVER_USERNAME TEST_KEY TEST_MASTER_IP TEST_SLAVE_IPS VAR1 VAR2 VAR3)
            list_secret_names=$(gh secret list | awk '{print $1}')
            for secret_name in "${secrets_to_delete[@]}"; do
              if [[ "$list_secret_names" =~ "$secret_name" ]]; then  # Check if MY_SECRET exists in the list
                echo "Secret exists, deleting..."
                gh secret delete $secret_name
                if [ $? -eq 0 ]; then
                  echo "Secret deleted successfully."
                else
                  echo "Failed to delete secret."
                fi
              else
                echo "Secret does not exist."
              fi
            done          
            gh secret list -e prod
            gh secret list
      - name: Create Prerelease
        uses: ncipollo/release-action@v1
        with:
          #prerelease: true
          tag: test-${{ env.BRANCH_NAME }}-.${{ github.run_number }}-${{ github.run_id }}
          makeLatest: true
          body: ${{ github.run_number }}

