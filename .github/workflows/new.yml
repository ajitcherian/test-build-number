name: My workflow

on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions: write-all  
jobs:
  build_id:
    name: Increment value ***REMOVED***
    runs-on: ubuntu-la***REMOVED***
    steps:
      - name: 'Set build id'
        id: build_id
        # add a step output `steps.build_id.outputs.id` as the unique id
        run: echo "::set-output name=id::$(date +%s)"
      - name: 'Cache .build-id'
        uses: actions/cache@v1
        with:
          # store the build id to github cache
          path: ${{ github.workspace }}/.build-id
          # use the build id to generate a completly unique cache
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}-${{ steps.build_id.outputs.id }}
      - name: 'Save build id'
        # store the build id to a folder that we can later cache.
        run: |
          mkdir -p .build-id 
          echo $BUILD_ID > .build-id/id
        env:
          BUILD_ID: ${{ steps.build_id.outputs.id }}
  ***REMOVED***s:
    # require the build to run after the build_id job
    needs: build_id
    name: Cypress run
    runs-on: ubuntu-la***REMOVED***
    strategy:
      matrix:
        # run 2 copies of the current job in parallel
        containers: [1, 2]
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      # restore the build id
      - name: 'Cache .build-id'
        uses: actions/cache@v1
        with:
          path: ${{ github.workspace }}/.build-id
          key: ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-id-${{ github.head_ref }}-${{ github.sha }}
      # set the build id from the restored cache
      - name: 'Set build id'
        id: build_id
        run: echo "::set-output name=id::$(cat .build-id/id)"
      # because of "record" and "parallel" parameters
      # these containers will load balance all found ***REMOVED***s among themselves
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          record: true
          parallel: true
          # use our build id
          ci-build-id: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'
        env:
          # pass the Dashboard record key as an environment variable
          #CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
