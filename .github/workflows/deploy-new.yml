name: Deploy Nginx
on:
  workflow_dispatch:
    inputs:
      deploy-environment:
        type: choice
        description: 'Deploy Environment'
        options:
        - dev
        - qa
        - uat
        - prod
        - stage
        required: true
        default: 'dev'
      release-version:
        description: 'Get Release version from Github release'
        required: true
        default: 'latest'
      use-kustomize:
        description: 'Change to be applied using kustomize'
        type: boolean
        required: true
        default: false
env:
  DOCKER_REGISTRY: "mck-ontada-sre.jfrog.io"
  JFROG_REPO_NAME: "iknowmed-mcp-admin"
  IMAGE_TAG: "${{ github.event.inputs.release-version }}"
  ENV: "${{ github.event.inputs.deploy-environment }}"
  WORKFLOW_ID: "${{ github.run_id }}"
  RELEASE_VERSION: "${{ github.event.inputs.release-version }}"

jobs:
  approval:
    name: "Approval Stage for Prod environment"
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v2
        if: contains(github.event.inputs.deploy-environment, 'prod')

      - name: "Check and Cancel Job"
        if: contains(github.event.inputs.deploy-environment, 'prod')
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          total_sleep_time=600 # Total sleep time in seconds
          check_interval=15    # Check interval in seconds

          # Calculate the number of iterations needed
          iterations=$((total_sleep_time / check_interval))

          # Loop for the specified number of iterations
          for ((i = 0; i < iterations; i++)); do
            status=$(gh run view ${{ github.run_id }} --json status | jq -r .status)

            if [ "$status" != "waiting" ]; then
              total_sleep_time=300 # New total sleep time in seconds
              # Exit the loop and script
              exit 0
            fi
            sleep $check_interval
          done        
          gh run cancel ${{ github.run_id }}

  deploy_with_kusomize:
    name: "${{ github.event.inputs.deploy-environment }} deploy for release ${{ github.event.inputs.release-version }}"
    environment: ${{ github.event.inputs.deploy-environment }}
    if: github.event.inputs.use-kustomize == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: "Deploy to ${{ github.event.inputs.deploy-environment }} cluster"
      run: |
        echo "run by kustomize"

  deploy:
    name: "${{ github.event.inputs.deploy-environment }} deploy tag : ${{ github.event.inputs.release-version }}"
    environment: ${{ github.event.inputs.deploy-environment }}
    if: github.event.inputs.use-kustomize == 'false'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    -
      name: Get Manifest File
      uses: actions/checkout@v2
    -
      name: "Deploy to ${{ github.event.inputs.deploy-environment }} cluster"
      run: |
          echo "run by no kustomize"
