name: "Test db"

on:      
  # push:
  #   branches: main
  workflow_dispatch:

env:
  TAG_NUMBER: "lynx-releases-6.2.2-2023-12-04-080835-02"
  DATABASE_UPDATE: "LMDA"
  ENV: "qa"
  JSON_VARIABLE: "${{ secrets[github.event.inputs['database-update']] }}"
  PROJECT_NAME: "lynx"

jobs:
    prerequisite:
      name: "Preparing Deployment"
      environment: qa
      runs-on: ubuntu-la***REMOVED***
      defaults:
        run:
          shell: bash
      container:
        image:  mehulsharma20/sqlplus:v7
        options: --user root
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
          #with:
            #fetch-tags: 'true'
            #ref: ${{ github.event.inputs.release-version }}

        - name: Set Variables
          run: |
            # If release name has release/FHIR it will modify it to release-FHIR.
            PROJECT_NAME="lynx"
            echo "PROJECT_NAME=`echo ${PROJECT_NAME}`" >> $GITHUB_ENV
            input="${{ env.TAG_NUMBER}}"
            if [[ $input =~ ^$PROJECT_NAME-(.*?)-([0-9]{4})-([0-9]{2})-([0-9]{2})-([0-9]{6})-([0-9]+) ]]; then
              BRANCH_NAME=$(echo "${BASH_REMATCH[1]}" | sed 's/\//-/g')
              echo "BRANCH_NAME=`echo ${BRANCH_NAME}`" >> $GITHUB_ENV 
            else
              echo "Invalid input format: $input"
            fi
            echo $PROJECT_NAME $BRANCH_NAME


        - name: Test SSH on blank value for slave
          uses: appleboy/ssh-action@master
          env: 
            BLANK_SECRET: ${{ secrets.BLANK_SECRET }}
          if: ${{ env.BLANK_SECRET != '' }}          
          with:
            host: ${{ secrets.TEST_MASTER_IP }}, ${{ secrets.TEST_SLAVE_IPS }}
            username: ubuntu
            key: ${{ secrets.TEST_KEY }}
            script_stop: true
            script: |
              echo "Test SSH on blank value for slave"
              whoami
              hostname
        - name: Test SSH on two secrets
          uses: appleboy/ssh-action@master
          env: 
            TEST_SLAVE_IPS: ${{ secrets.TEST_SLAVE_IPS }}
          if: ${{ env.TEST_SLAVE_IPS != '' }}          
          with:
            host: ${{ secrets.TEST_MASTER_IP }}, ${{ secrets.TEST_SLAVE_IPS }}
            username: ubuntu
            key: ${{ secrets.TEST_KEY }}
            script_stop: true
            script: |
              echo "Test SSH on two secrets"
              whoami
              hostname 
        - name: Test SSH on master
          uses: appleboy/ssh-action@master          
          with:
            host: ${{ secrets.TEST_MASTER_IP }}
            username: ubuntu
            key: ${{ secrets.TEST_KEY }}
            script_stop: true
            script: |
              echo "Test SSH on master"
              whoami
              hostname 
        - name: Test SSH on slave
          uses: appleboy/ssh-action@master     
          env: 
            TEST_SLAVE_IPS: ${{ secrets.TEST_SLAVE_IPS }}
          if: ${{ env.TEST_SLAVE_IPS != '' }}   
          with:
            host: ${{ secrets.TEST_SLAVE_IPS }}
            username: ubuntu
            key: ${{ secrets.TEST_KEY }}
            script_stop: true
            script: |
              echo "Test SSH on slave"
              whoami
              hostname               


                
